	package frmQLCafe;
	
	import javax.swing.JFrame;
	import javax.swing.JLabel;
	//import javax.swing.SwingConstants;
	import java.awt.EventQueue;
	import javax.swing.JPanel;
	import java.awt.Color;
	import java.awt.Font;
	import javax.swing.JTextField;
	import javax.swing.JButton;
	import javax.swing.border.TitledBorder;	
	import javax.swing.JTable;
	import javax.swing.table.DefaultTableModel;
	import java.sql.*;
	import java.util.Vector;
	import javax.swing.JScrollPane;
	
	import java.awt.event.ActionListener;
import java.io.Serializable;
import java.awt.event.ActionEvent;
	import javax.swing.*;
	
	import javax.swing.table.TableRowSorter;

	public class frmQuanLyKhoHang extends JFrame  implements Serializable {
		
		 private static final long serialVersionUID = 1L;
    private JTextField txtTimKiem;
    private JTable tableSanPham;

    private JScrollPane scrollPane_DSSP;

    private static final String URL = "jdbc:mysql://localhost:3306/cafe";
    private static final String USER = "root";  // Thay thế bằng tên người dùng MySQL của bạn
    private static final String PASSWORD = "";  // Thay thế bằng mật khẩu MySQL của bạn

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    frmQuanLyKhoHang window = new frmQuanLyKhoHang();
                    window.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public frmQuanLyKhoHang() {
        getContentPane().setBackground(new Color(255, 255, 255));
        initialize();
        loadSanPhamToScrollPane();
    }

    private void initialize() {
        setTitle("Form Quản Lý Kho Hàng");
        setSize(600, 700);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        JPanel panel = new JPanel();
        panel.setLayout(null);
        panel.setBackground(Color.BLACK);
        panel.setBounds(0, 0, 586, 51);
        getContentPane().add(panel);

        JLabel lblHan = new JLabel("KHO HÀNG");
        lblHan.setForeground(Color.WHITE);
        lblHan.setFont(new Font("Tahoma", Font.BOLD, 20));
        lblHan.setBounds(250, 10, 128, 31);
        panel.add(lblHan);

        tableSanPham = new JTable();
        
        JLabel lblNewLabel_1 = new JLabel("Tìm kiếm : ");
        lblNewLabel_1.setForeground(Color.BLACK);
        lblNewLabel_1.setFont(new Font("Tahoma", Font.BOLD, 12));
        lblNewLabel_1.setBounds(10, 61, 75, 22);
        getContentPane().add(lblNewLabel_1);

        txtTimKiem = new JTextField();
        txtTimKiem.setColumns(10);
        txtTimKiem.setBounds(87, 64, 237, 19);
        getContentPane().add(txtTimKiem);

        JButton btnTimKiem = new JButton("Tìm Kiếm ");
        btnTimKiem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String text = txtTimKiem.getText();
                if (text.trim().length() == 0) {
                    ((DefaultTableModel) tableSanPham.getModel()).setRowCount(0);
                    loadSanPhamToScrollPane();
                } else {
                    searchSanPham(text);
                }
            }
        });
        btnTimKiem.setForeground(Color.WHITE);
        btnTimKiem.setFont(new Font("Tahoma", Font.BOLD, 12));
        btnTimKiem.setBackground(Color.BLACK);
        btnTimKiem.setBounds(334, 58, 125, 30);
        getContentPane().add(btnTimKiem);

        JPanel panel_DSSP = new JPanel();
        panel_DSSP.setBackground(new Color(255, 255, 255));
        panel_DSSP.setBorder(new TitledBorder(null, "Danh S\u00E1ch S\u1EA3n Ph\u1EA9m", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        panel_DSSP.setBounds(10, 90, 557, 562);
        getContentPane().add(panel_DSSP);
        panel_DSSP.setLayout(null);

        scrollPane_DSSP = new JScrollPane();
        scrollPane_DSSP.setBounds(10, 22, 537, 530);
        panel_DSSP.add(scrollPane_DSSP);
    }

    private void loadSanPhamToScrollPane() {
        DefaultTableModel modelSanPham = new DefaultTableModel();
        modelSanPham.addColumn("Mã Sản Phẩm");
        modelSanPham.addColumn("Tên Sản Phẩm");
        modelSanPham.addColumn("Số Lượng");
        modelSanPham.addColumn("Giá");

        Vector<Vector<Object>> dataSanPham = getSanPhamData();

        for (Vector<Object> row : dataSanPham) {
            modelSanPham.addRow(row);
        }

        tableSanPham.setModel(modelSanPham);

        scrollPane_DSSP.setViewportView(tableSanPham);
    }

    private Vector<Vector<Object>> getSanPhamData() {
        Vector<Vector<Object>> data = new Vector<>();
        Connection conn = getConnection();

        if (conn != null) {
            try {
                Statement stmt = conn.createStatement();
                String query = "SELECT MaSanPham, Ten, SoLuong, Gia FROM sanpham";
                ResultSet rs = stmt.executeQuery(query);

                while (rs.next()) {
                    Vector<Object> row = new Vector<>();
                    row.add(rs.getInt("MaSanPham"));
                    row.add(rs.getString("Ten"));
                    row.add(rs.getInt("SoLuong"));
                    row.add(rs.getDouble("Gia"));
                    data.add(row);
                }

                rs.close();
                stmt.close();
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        return data;
    }

    private void searchSanPham(String text) {
        DefaultTableModel model = (DefaultTableModel) tableSanPham.getModel();
        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<>(model);
        tableSanPham.setRowSorter(rowSorter);
        rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
    }

    private Connection getConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(URL, USER, PASSWORD);
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            return null;
        }
    }
}
